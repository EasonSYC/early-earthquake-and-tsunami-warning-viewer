<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApiTextConfirmed" xml:space="preserve">
    <value>设定成功！</value>
  </data>
  <data name="ApiTextConfirm" xml:space="preserve">
    <value>确认</value>
  </data>
  <data name="ApiText" xml:space="preserve">
    <value>API 密钥：</value>
  </data>
  <data name="AuthenticationStatusTextApiKey" xml:space="preserve">
    <value>API 密钥使用中</value>
  </data>
  <data name="AuthenticationStatusTextNull" xml:space="preserve">
    <value>请设定认证方法</value>
  </data>
  <data name="AuthenticationStatusTextOAuth" xml:space="preserve">
    <value>OAuth 使用中</value>
  </data>
  <data name="DmdssText" xml:space="preserve">
    <value>DM-D.S.S. 数据源</value>
  </data>
  <data name="HeaderText" xml:space="preserve">
    <value>设置</value>
  </data>
  <data name="KmoniMeasurementText" xml:space="preserve">
    <value>数据：</value>
  </data>
  <data name="KmoniSensorText" xml:space="preserve">
    <value>观测点：</value>
  </data>
  <data name="KmoniText" xml:space="preserve">
    <value>实时震动地图</value>
  </data>
  <data name="LangText" xml:space="preserve">
    <value>语言 / Language / 言語</value>
  </data>
  <data name="OAuthButtonTextConnected" xml:space="preserve">
    <value>解除 OAuth 账号认证</value>
  </data>
  <data name="OAuthConnectedText" xml:space="preserve">
    <value>认证成功！</value>
  </data>
  <data name="OAuthButtonTextDisconnected" xml:space="preserve">
    <value>进行 OAuth 账号认证</value>
  </data>
  <data name="AuthenticationStatusText" xml:space="preserve">
    <value>状况：</value>
  </data>
  <data name="WebSocketListTextApplicationName" xml:space="preserve">
    <value>应用名</value>
  </data>
  <data name="WebSocketButtonTextConnected" xml:space="preserve">
    <value>切断 WebSocket 连接</value>
  </data>
  <data name="WebSocketListTextWebSocketId" xml:space="preserve">
    <value>连接 ID</value>
  </data>
  <data name="WebSocketListTextConnectionTime" xml:space="preserve">
    <value>连接时间</value>
  </data>
  <data name="WebSocketButtonTextDisconnected" xml:space="preserve">
    <value>连接 WebSocket</value>
  </data>
  <data name="WebSocketListTextDisconnect" xml:space="preserve">
    <value>切断连接</value>
  </data>
  <data name="WebSocketListTextEmptyConnection" xml:space="preserve">
    <value>空的 WebSocket 连接</value>
  </data>
  <data name="WebSocketTextRefreshList" xml:space="preserve">
    <value>更新 WebSocket 连接列表</value>
  </data>
  <data name="WebSocketText" xml:space="preserve">
    <value>WebSocket 连接情况</value>
  </data>
  <data name="KmoniSensorTextBorehole" xml:space="preserve">
    <value>地下</value>
  </data>
  <data name="KmoniSensorTextSurface" xml:space="preserve">
    <value>地面</value>
  </data>
  <data name="KmoniMeasurementTextResponse4000" xml:space="preserve">
    <value>4.000 赫兹速度应答</value>
  </data>
  <data name="KmoniMeasurementTextMeasuredIntensity" xml:space="preserve">
    <value>实时烈度</value>
  </data>
  <data name="KmoniMeasurementTextPeakGroundAcceleration" xml:space="preserve">
    <value>最大加速度</value>
  </data>
  <data name="KmoniMeasurementTextPeakGroundDisplacement" xml:space="preserve">
    <value>最大位移</value>
  </data>
  <data name="KmoniMeasurementTextPeakGroundVelocity" xml:space="preserve">
    <value>最大速度</value>
  </data>
  <data name="KmoniMeasurementTextResponse0125" xml:space="preserve">
    <value>0.125 赫兹速度应答</value>
  </data>
  <data name="KmoniMeasurementTextResponse0250" xml:space="preserve">
    <value>0.250 赫兹速度应答</value>
  </data>
  <data name="KmoniMeasurementTextResponse0500" xml:space="preserve">
    <value>0.500 赫兹速度应答</value>
  </data>
  <data name="KmoniMeasurementTextResponse1000" xml:space="preserve">
    <value>1.000 赫兹速度应答</value>
  </data>
  <data name="KmoniMeasurementTextResponse2000" xml:space="preserve">
    <value>2.000 赫兹速度应答</value>
  </data>
  <data name="GeneralText2" xml:space="preserve">
    <value>检测到地震后立即获得的信息对于震源和震级的推定和预测烈度可能准度较低。</value>
  </data>
  <data name="GeneralText1" xml:space="preserve">
    <value>因为信息是在地震发生后几秒钟内产生的，因此可能会出现误报。</value>
  </data>
  <data name="GeneralText3" xml:space="preserve">
    <value>即使在正常情况下，预测烈度也有可能有1级左右的误差。</value>
  </data>
  <data name="GeneralText4" xml:space="preserve">
    <value>对于仅基于PLUM方法的情报或检测到100gal的场合，震源的规模、深度和震央位置并没有地震学意义。</value>
  </data>
  <data name="GeneralText5" xml:space="preserve">
    <value>对于深度超过150千米的地震，不发表预测最大烈度（可能会基于PLUM方法发布）。</value>
  </data>
  <data name="GeneralText6" xml:space="preserve">
    <value>根据使用的通信环境不同，从情报发表到到达可能会有1秒以上的误差。请准备网速大于5Mbps的稳定的通信环境。</value>
  </data>
  <data name="GeneralTextHeader" xml:space="preserve">
    <value>关于紧急地震速报（请确保已知悉）</value>
  </data>
  <data name="GeneralTextBullet" xml:space="preserve">
    <value> - </value>
  </data>
</root>