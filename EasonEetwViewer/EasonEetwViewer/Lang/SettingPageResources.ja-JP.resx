<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ApiConfirmedText" xml:space="preserve">
    <value>確認しました！</value>
  </data>
  <data name="ApiConfirmText" xml:space="preserve">
    <value>確認</value>
  </data>
  <data name="ApiText" xml:space="preserve">
    <value>API キー：</value>
  </data>
  <data name="AuthenticationStatusTextApiKey" xml:space="preserve">
    <value>API キー使用中</value>
  </data>
  <data name="AuthenticationStatusTextNull" xml:space="preserve">
    <value>認証を設定してください</value>
  </data>
  <data name="AuthenticationStatusTextOAuth" xml:space="preserve">
    <value>OAuth 使用中</value>
  </data>
  <data name="DmdssText" xml:space="preserve">
    <value>DM-D.S.S. データサービス</value>
  </data>
  <data name="HeaderText" xml:space="preserve">
    <value>設定</value>
  </data>
  <data name="KmoniMeasurementText" xml:space="preserve">
    <value>データ：</value>
  </data>
  <data name="KmoniSensorText" xml:space="preserve">
    <value>観測点：</value>
  </data>
  <data name="KmoniText" xml:space="preserve">
    <value>強震モニタ</value>
  </data>
  <data name="LangText" xml:space="preserve">
    <value>言語 / Language / 语言</value>
  </data>
  <data name="OAuthConnectedButtonText" xml:space="preserve">
    <value>OAuth アカウントを連携解除</value>
  </data>
  <data name="OAuthConnectedText" xml:space="preserve">
    <value>認証しました！</value>
  </data>
  <data name="OAuthDisconnectedButtonText" xml:space="preserve">
    <value>OAuth アカウントを連携</value>
  </data>
  <data name="AuthStatusText" xml:space="preserve">
    <value>状況：</value>
  </data>
  <data name="WebSocketApplicationNameText" xml:space="preserve">
    <value>アプリ</value>
  </data>
  <data name="WebSocketConnectedButtonText" xml:space="preserve">
    <value>WebSocket を切断する</value>
  </data>
  <data name="WebSocketWebSocketIdText" xml:space="preserve">
    <value>接続ID</value>
  </data>
  <data name="WebSocketConnectionTimeText" xml:space="preserve">
    <value>接続時刻</value>
  </data>
  <data name="WebSocketDisconnectedButtonText" xml:space="preserve">
    <value>WebSocket を接続する</value>
  </data>
  <data name="WebSocketDisconnectText" xml:space="preserve">
    <value>切断</value>
  </data>
  <data name="WebSocketEmptyConnectionName" xml:space="preserve">
    <value>利用可能の接続枠</value>
  </data>
  <data name="WebSocketListRefreshText" xml:space="preserve">
    <value>WebSocket 接続リストを更新</value>
  </data>
  <data name="WebSocketText" xml:space="preserve">
    <value>WebSocket 接続情報</value>
  </data>
  <data name="KmoniSensorTextBorehole" xml:space="preserve">
    <value>地中</value>
  </data>
  <data name="KmoniSensorTextSurface" xml:space="preserve">
    <value>地表</value>
  </data>
  <data name="KmoniMeasurementTextResponse4000" xml:space="preserve">
    <value>4.000Hz速度応答</value>
  </data>
  <data name="KmoniMeasurementTextMeasuredIntensity" xml:space="preserve">
    <value>リアルタイム震度</value>
  </data>
  <data name="KmoniMeasurementTextPeakGroundAcceleration" xml:space="preserve">
    <value>最大加速度</value>
  </data>
  <data name="KmoniMeasurementTextPeakGroundDisplacement" xml:space="preserve">
    <value>最大変位</value>
  </data>
  <data name="KmoniMeasurementTextPeakGroundVelocity" xml:space="preserve">
    <value>最大速度</value>
  </data>
  <data name="KmoniMeasurementTextResponse0125" xml:space="preserve">
    <value>0.125Hz速度応答</value>
  </data>
  <data name="KmoniMeasurementTextResponse0250" xml:space="preserve">
    <value>0.250Hz速度応答</value>
  </data>
  <data name="KmoniMeasurementTextResponse0500" xml:space="preserve">
    <value>0.500Hz速度応答</value>
  </data>
  <data name="KmoniMeasurementTextResponse1000" xml:space="preserve">
    <value>1.000Hz速度応答</value>
  </data>
  <data name="KmoniMeasurementTextResponse2000" xml:space="preserve">
    <value>2.000Hz速度応答</value>
  </data>
  <data name="GeneralText2" xml:space="preserve">
    <value>地震検知直後の情報は震源やマグニチュードの推定や、予測震度の精度が低いことがあります。</value>
  </data>
  <data name="GeneralText1" xml:space="preserve">
    <value>地震発生後、数秒で情報を作成するため、誤報が発生することがあります。</value>
  </data>
  <data name="GeneralText3" xml:space="preserve">
    <value>通常でも推定震度は1階級程度の誤差があります。</value>
  </data>
  <data name="GeneralText4" xml:space="preserve">
    <value>PLUM法のみの情報・100gal検知の場合、震源要素（規模、深さ、震央）は地震学的に意味がない仮の値となります。</value>
  </data>
  <data name="GeneralText5" xml:space="preserve">
    <value>深さ150kmより深い地震の場合、予想最大震度は発表されません（※PLUM法により発表される場合があります）。</value>
  </data>
  <data name="GeneralText6" xml:space="preserve">
    <value>ご利用の通信環境により、発表から情報到達まで1秒以上かかる可能性があります。5Mbps以上の安定した通信環境をご用意ください。</value>
  </data>
  <data name="GeneralTextHeader" xml:space="preserve">
    <value>緊急地震速報（EEW）について（必ずお読みください）</value>
  </data>
  <data name="GeneralTextBullet" xml:space="preserve">
    <value> - </value>
  </data>
</root>